// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjetoAndre.Infrastruct.Context;

#nullable disable

namespace ProjetoAndre.Infrastruct.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjetoAndre.Domain.Entities.Combo", b =>
                {
                    b.Property<Guid>("IdCombo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCombo");

                    b.HasAlternateKey("Code")
                        .HasName("ComboCode");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("combos");
                });

            modelBuilder.Entity("ProjetoAndre.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CFop")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ComboId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NCM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Supplier")
                        .HasColumnType("text");

                    b.HasKey("IdProduct");

                    b.HasIndex("BarCode")
                        .IsUnique();

                    b.HasIndex("ComboId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("products");
                });

            modelBuilder.Entity("ProjetoAndre.Domain.Entities.Product", b =>
                {
                    b.HasOne("ProjetoAndre.Domain.Entities.Combo", "Combo")
                        .WithMany("ProductsInCombo")
                        .HasForeignKey("ComboId");

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("ProjetoAndre.Domain.Entities.Combo", b =>
                {
                    b.Navigation("ProductsInCombo");
                });
#pragma warning restore 612, 618
        }
    }
}
